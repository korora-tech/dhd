name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  rust:
    name: Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
          override: true
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      # --------------------------------------------------------------------
      # The default features of this crate include the `desktop` feature, which
      # pulls in the `tauri` dependency. `tauri` (and the `gtk-rs` stack it
      # relies on) require the GLib development headers to be present at build
      # time. Install the required system packages so that `pkg-config` can
      # locate `glib-2.0.pc` and friends when `cargo clippy` compiles the
      # crate. Without these packages the build-script of `glib-sys` aborts
      # with the error observed in CI.
      # --------------------------------------------------------------------
      - name: Install Linux build dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          # The minimum set required for glib-sys; we install a few extra
          # packages that are generally expected when compiling Tauri / GTK
          # based applications to avoid future surprises.
          sudo apt-get install -y \
            libglib2.0-dev \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libsoup2.4-dev \
            build-essential \
            pkg-config \
            curl ca-certificates
      - name: Check formatting
        run: cargo fmt -- --check
      - name: Lint
        run: cargo clippy --all-targets -- -D warnings
      - name: Cache cargo-tarpaulin
        uses: actions/cache@v3
        id: tarpaulin-cache
        with:
          path: ~/.cargo/bin/cargo-tarpaulin
          key: ${{ runner.os }}-cargo-tarpaulin-0.27.3
      - name: Install cargo-tarpaulin
        if: steps.tarpaulin-cache.outputs.cache-hit != 'true'
        run: cargo install cargo-tarpaulin --version 0.27.3
      - name: Run tests with coverage
        run: cargo tarpaulin --out xml --all-features --workspace
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./cobertura.xml
          fail_ci_if_error: true
          verbose: true

  tauri:
    name: Tauri Bundle (Linux)
    runs-on: ubuntu-latest
    needs: rust
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Build web assets
        run: bun run build
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
