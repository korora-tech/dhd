name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  publish-jsr:
    name: Publish Types to JSR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Update version in deno.json
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          cd types
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" deno.json

      - name: Publish to JSR
        run: |
          cd types
          bunx jsr publish --allow-dirty

  release:
    name: Release Build and Publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libglib2.0-dev \
            libsoup2.4-dev \
            build-essential \
            pkg-config \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-indicator3-dev \
            libgtksourceview-3.0-dev

      - name: Install Bun (Linux/macOS)
        if: runner.os != 'Windows'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js (Windows)
        if: runner.os == 'Windows'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install web dependencies
        shell: bash
        run: |
          if command -v bun >/dev/null 2>&1; then
            bun install
          else
            npm ci
          fi

      - name: Build web assets
        shell: bash
        run: |
          if command -v bun >/dev/null 2>&1; then
            bun run build
          else
            npm run build
          fi

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build and Release Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: ${{ github.ref_name }}
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: false
          prerelease: false
